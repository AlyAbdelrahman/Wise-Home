{"version":3,"sources":["components/table/TableElement.js","services/utils.js","services/countries-service.js","components/table/SingleTableCell.js","containers/filteredTable/FilteredTable.js","App.js","index.js"],"names":["useStyles","makeStyles","table","minWidth","useStyles1","theme","root","flexShrink","marginLeft","spacing","TablePaginationActions","props","classes","useTheme","count","page","rowsPerPage","onPageChange","className","IconButton","onClick","event","disabled","direction","Math","ceil","max","TableElement","TableRowHeader","rows","React","useState","setPage","setRowsPerPage","emptyRows","min","length","Paper","TableContainer","Table","TableHead","TableRow","map","singleTableRowCellHeader","TableCell","uuidv4","TableBody","slice","single","ele","index","component","scope","align","style","height","colSpan","TableFooter","TablePagination","rowsPerPageOptions","label","value","SelectProps","inputProps","native","newPage","onRowsPerPageChange","parseInt","target","ActionsComponent","utils","handleResponse","response","ok","json","catch","Error","status","then","message","console","log","countriesDataServices","getCountriesData","url","process","fetch","method","imgContainer","width","image","SingleTableCell","data","type","el","name","src","alt","getCellData","FilteredTable","setRows","orginalRowsData","setOrginalRowsData","searched","setSearched","setMappedRowsData","rowsData","mappedData","countryData","push","flag","population","languages","currencies","requestSearch","searchedVal","filteredRows","filter","row","some","language","toLowerCase","includes","useEffect","document","body","background","onChange","searchVal","onCancelSearch","placeholder","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2f007e3b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport PropTypes, {any} from 'prop-types';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650\r\n  },\r\n});\r\nconst useStyles1 = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nfunction TablePaginationActions(props) {\r\n  const classes = useStyles1();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onPageChange } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onPageChange(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onPageChange(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onPageChange(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  rowsPerPage: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nconst TableElement = ({ TableRowHeader, rows }) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper>\r\n      <TableContainer>\r\n        <Table className={classes.table} aria-label=\"countries table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {TableRowHeader.map((singleTableRowCellHeader) => <TableCell key={uuidv4()}>{singleTableRowCellHeader}</TableCell>)}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n\r\n            {(rowsPerPage > 0\r\n              ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              : rows\r\n              ).map((single) => (\r\n                <TableRow key={uuidv4()} >\r\n                  {single.map((ele, index) => (index === 0 ?\r\n                    <TableCell component=\"th\" scope=\"row\" key={uuidv4()}>\r\n                      {ele}\r\n                    </TableCell>\r\n                    :\r\n                    <TableCell align=\"left\" key={uuidv4()}>\r\n                      {ele}\r\n                    </TableCell>\r\n                  ))}\r\n                </TableRow>\r\n              )) \r\n            }\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: 53 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n          <TableFooter>\r\n            <TableRow>\r\n              <TablePagination\r\n                rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n                colSpan={3}\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                SelectProps={{\r\n                  inputProps: { 'aria-label': 'rows per page' },\r\n                  native: true,\r\n                }}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n                ActionsComponent={TablePaginationActions}\r\n              />\r\n            </TableRow>\r\n          </TableFooter>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n    </Paper>\r\n  )\r\n}\r\n\r\nTableElement.propTypes = {\r\n  TableRowHeader: PropTypes.shape(any).isRequired,\r\n  rows: PropTypes.shape(any).isRequired\r\n};\r\nexport default TableElement;\r\n\r\n","  \r\nfunction handleResponse(response){\r\n    if (!response.ok) {\r\n        return response.json()\r\n            .catch(() => {\r\n                // Couldn't parse the JSON\r\n                throw new Error(response.status);\r\n            })\r\n            .then(({message}) => {\r\n                // Got valid JSON with error response, use it\r\n                console.log('>>message',message)\r\n                throw new Error(message || response.status);\r\n            });\r\n    }\r\n    // Successful response, parse the JSON and return the data\r\n    return response.json();\r\n}\r\n\r\nconst utils = {\r\n    handleResponse\r\n}\r\nexport default utils;","import utils from './utils'\r\n\r\nfunction getCountriesData() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n    }\r\n    const url = `${process.env.REACT_APP_API_URL}/rest/v2/all`;\r\n    return fetch(url, requestOptions)\r\n    .then(utils.handleResponse);\r\n}\r\n\r\nconst countriesDataServices = {\r\n    getCountriesData\r\n}\r\n\r\nexport default countriesDataServices;","import React from 'react';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    imgContainer: {\r\n      width: '3rem',\r\n    },\r\n    image:{\r\n        width: '100%',\r\n        height: '100%'\r\n    }\r\n  });\r\nconst SingleTableCell = (props) => {\r\n    const { data, type } = props;\r\n    const classes = useStyles();\r\n    const getCellData = () => {\r\n        switch (type) {\r\n            case 'text':\r\n                return <p>{data}</p>\r\n            case 'array':\r\n                return data.map(el => <p key={uuidv4()}>{el.name}</p>)\r\n            case 'image':\r\n                return <div className={classes.imgContainer}><img className={classes.image} src={data} alt=\"img\" /></div>\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return getCellData()\r\n}\r\nexport default SingleTableCell;\r\n","import React, { useEffect, useState, useMemo } from 'react'\r\nimport TableElement from '../../components/table/TableElement';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport SearchBar from \"material-ui-search-bar\";\r\nimport countriesDataServices from '../../services/countries-service';\r\nimport SingleTableCell from '../../components/table/SingleTableCell';\r\n\r\nfunction FilteredTable() {\r\n    const [rows, setRows] = useState([]);\r\n    const [orginalRowsData, setOrginalRowsData] = useState([]);\r\n    const [searched, setSearched] = useState(\"\");\r\n    const TableRowHeaders = ['Flag', 'Country Name', 'Population Density', 'Languages', 'Currencies']\r\n\r\n\r\n    const cancelSearch = () => {\r\n        setSearched(\"\");\r\n        requestSearch(searched);\r\n    };\r\n    const setMappedRowsData = (rowsData) => {\r\n        let mappedData = [];\r\n        if (rowsData.length > 0) {\r\n            rowsData.map((countryData) => {\r\n                mappedData.push([\r\n                    <SingleTableCell type=\"image\" data={countryData.flag} />\r\n                    , <SingleTableCell type=\"text\" data={countryData.name} />\r\n                    , <SingleTableCell type=\"text\" data={countryData.population} />\r\n                    , <SingleTableCell type=\"array\" data={countryData.languages} />\r\n                    , <SingleTableCell type=\"array\" data={countryData.currencies} />\r\n                ])\r\n            })\r\n            setRows(mappedData)\r\n        }\r\n    };\r\n    const requestSearch = (searchedVal) => {\r\n        const filteredRows = orginalRowsData.filter((row) => {\r\n            return row.languages.some(language=>language.name.toLowerCase().includes(searchedVal.toLowerCase()));\r\n        });\r\n        setMappedRowsData(filteredRows);\r\n    };\r\n    useEffect(() => {\r\n        document.body.style.background = \"radial-gradient(#45657B, #102A3A) repeat\";\r\n        countriesDataServices.getCountriesData().then((data) => {setMappedRowsData(data);setOrginalRowsData(data)});\r\n    }, [])\r\n    return (\r\n        <>\r\n            <Paper>\r\n                <SearchBar\r\n                    value={searched}\r\n                    onChange={(searchVal) => requestSearch(searchVal)}\r\n                    onCancelSearch={() => cancelSearch()}\r\n                    placeholder=\"Search by language\"\r\n                />\r\n                <TableElement TableRowHeader={TableRowHeaders} rows={rows} />\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\nexport default FilteredTable;\r\n","import FilteredTable from './containers/filteredTable/FilteredTable';\n\nfunction App() {\n  return (\n    <div>\n    <FilteredTable/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}